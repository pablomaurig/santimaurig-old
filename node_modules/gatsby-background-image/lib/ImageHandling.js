"use strict";

exports.__esModule = true;
exports.initialBgImage = exports.switchImageSettings = void 0;

var _HelperUtils = require("./HelperUtils");

var _ImageUtils = require("./ImageUtils");

var _MediaUtils = require("./MediaUtils");

var _SimpleUtils = require("./SimpleUtils");

var switchImageSettings = function switchImageSettings(_ref) {
  var image = _ref.image,
      bgImage = _ref.bgImage,
      imageRef = _ref.imageRef,
      state = _ref.state;
  var currentSources = (0, _ImageUtils.getCurrentFromData)({
    data: imageRef,
    propName: "currentSrc"
  });
  var returnArray = Array.isArray(image) && !(0, _MediaUtils.hasArtDirectionArray)({
    fluid: image
  });
  var lastImage = Array.isArray(bgImage) ? (0, _SimpleUtils.filteredJoin)(bgImage) : bgImage;
  var nextImage;
  var nextImageArray;
  var finalImage = false;

  if (returnArray) {
    nextImage = (0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "tracedSVG",
      returnArray: returnArray
    });
    nextImage = (0, _SimpleUtils.combineArray)((0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "base64",
      returnArray: returnArray
    }), nextImage);
    nextImage = (0, _SimpleUtils.combineArray)((0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "CSS_STRING",
      addUrl: false,
      returnArray: returnArray
    }), nextImage);

    if (state.imgLoaded && state.isVisible) {
      if (currentSources) {
        nextImage = (0, _SimpleUtils.combineArray)((0, _ImageUtils.getCurrentFromData)({
          data: imageRef,
          propName: "currentSrc",
          returnArray: returnArray
        }), nextImage);
        finalImage = true;
      } else {
        nextImage = (0, _SimpleUtils.combineArray)((0, _ImageUtils.getCurrentFromData)({
          data: imageRef,
          propName: "src",
          returnArray: returnArray
        }), nextImage);
        finalImage = true;
      }
    }

    nextImage = (0, _SimpleUtils.combineArray)(nextImage, bgImage);
    var dummyArray = (0, _ImageUtils.createDummyImageArray)(image.length);
    nextImage = (0, _SimpleUtils.combineArray)(nextImage, dummyArray);
    nextImageArray = nextImage;
    nextImage = (0, _SimpleUtils.filteredJoin)(nextImage);
  } else {
    nextImage = "";
    if (image.tracedSVG) nextImage = (0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "tracedSVG"
    });
    if (image.base64 && !image.tracedSVG) nextImage = (0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "base64"
    });

    if (state.imgLoaded && state.isVisible) {
      nextImage = currentSources;
      finalImage = true;
    }
  }

  var afterOpacity = state.imageState % 2;

  if (!returnArray && nextImage === "" && state.imgLoaded && state.isVisible && imageRef && !imageRef.currentSrc) {
    nextImage = (0, _ImageUtils.getCurrentFromData)({
      data: imageRef,
      propName: "src",
      checkLoaded: false
    });
    finalImage = true;
  }

  if (!nextImage) nextImage = lastImage;
  var newImageSettings = {
    lastImage: lastImage,
    nextImage: nextImage,
    afterOpacity: afterOpacity,
    finalImage: finalImage
  };
  if (nextImageArray) newImageSettings.nextImageArray = nextImageArray;
  return newImageSettings;
};

exports.switchImageSettings = switchImageSettings;

var initialBgImage = function initialBgImage(props, withDummies) {
  if (withDummies === void 0) {
    withDummies = true;
  }

  var convertedProps = (0, _HelperUtils.convertProps)(props);
  var image = convertedProps.fluid || convertedProps.fixed;
  if (!image) return "";
  var returnArray = (0, _ImageUtils.hasImageArray)(convertedProps);
  var initialImage;

  if (returnArray) {
    initialImage = (0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "tracedSVG",
      returnArray: returnArray
    });
    initialImage = (0, _SimpleUtils.combineArray)((0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "base64",
      returnArray: returnArray
    }), initialImage);
    initialImage = (0, _SimpleUtils.combineArray)((0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "CSS_STRING",
      addUrl: false,
      returnArray: returnArray
    }), initialImage);

    if (withDummies) {
      var dummyArray = (0, _ImageUtils.createDummyImageArray)(image.length);
      initialImage = (0, _SimpleUtils.combineArray)(initialImage, dummyArray);
    }
  } else {
    initialImage = "";
    if (image.tracedSVG) initialImage = (0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "tracedSVG"
    });
    if (image.base64 && !image.tracedSVG) initialImage = (0, _ImageUtils.getCurrentFromData)({
      data: image,
      propName: "base64"
    });
  }

  return initialImage;
};

exports.initialBgImage = initialBgImage;